@page "/fetchdata"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using WebAssemblyApp.Client.Models.Filters
@using WebAssemblyApp.Shared

@inject IHttpClientFactory Http
@inject AuthenticationStateProvider authProvider;

@attribute [Authorize(Roles ="User,Admin")]

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        var auth = (BlazorAuthenticationStateProvider)this.authProvider;
        var client = this.Http.CreateClient("api");
       // Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", await auth.GetTokenFromSession());
        forecasts = await client.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    }
}
